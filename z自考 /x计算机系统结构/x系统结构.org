* 第一章 概论
** 计算机系统的层次结构
   - 计算机系统 = 硬件/固件+软件
   - 计算机语言从低级向高级发展
     + 高一级语言相对于低级语言来说功能更强，更便于应用，但又以低级语言为基础
   - 透明性
     + 在计算机技术上 把这种本来存在的事物或属性 但从某种角度看有好像不存在的概念
   - 从计算机语言的角度 把计算机系统按功能划分成6级 从高到低 从0到5
     + 应用语言虚拟机
     + 高级语言虚拟机
     + 汇编语言虚拟机
     + 操作系统虚拟机
     + 机器语言(传统机器级)
     + 微程序机器级
   - 虚拟机 :: 由软件实现的机器
   - 语言实现的两种基本技术
     + 翻译 :: 把高一级程序全部转换低一级程序后 然后在低一级机器上实现的技术
     + 编译 :: 低级机器上用它的一串语句或指令来仿真高级机器级上的一条语句或指令的功能 是通过对高级机器级语言程序中的每条语句或指令逐条解释来执行的技术
** 计算机系统结构的定义
   - 系统结构的定义
     + 对计算机系统中各级界面的划分 定义 及其上下功能的分配
   - 计算机系统结构的本质
     + 确定计算机系统中软硬件的界面 界面之上由软件实现的功能 界面之下是硬件和固件实现的功能
   - 计算机系统结构的定义及其属性
     + 指传统机器级的系统结构 即软件和硬件的交互界面及其上下功能的分配 是计算机系统的外部特性
   - 外部特性
     + 指令系统
     + 数据表示
     + 寻址规则
     + 寄存器定义
     + 中断系统
     + 机器工作的状态的定义和切换
     + 存储系统
     + 信息保护
   - 计算机组成
     + 是计算机系统结构的逻辑实现 包括物理机器级中的数据流和控制流的组成及逻辑设计
   - 计算机实现
     + 计算机组成的物理实现 包括处理机和主存等部件的物理结构
   - 计算机系统结构 组成 实现的关系
     + 先有计算机系统结构 后有计算机组成 最后是计算机实现
     + 同一种计算机系统结构 可以有不同的计算机组成 同一种组成也可以有不同的实现技术
     + 系统结构的设计必须结合应用考虑 为软件和算法的实现提供更好的支持 同时要考虑可能采用的组成技术
     + 系统结构 组成和实现包括的具体内容随不同时期及不同计算机系统会有所不同
  
** 计算机系统结构软硬件的取舍与计算机系统的设计思路
   - 计算机系统软硬件取舍
     + 在现有的逻辑器件和存储其条件下 系统要有较高的性能价格比
     + 系统结构的设计不要过多的或不合理地限制各种组成 实现技术的支持
     + 硬件设计不仅要运用最新的技术成果 而且要考虑如何为软件提供更好的支持
   - 计算机系统的设计思路
     + 由上往下设计 :: 先考虑满足应用的要求 确定好面对使用者那级机器应该具备什么样的功能特性 然后按此要求往下设计
     + 由下往上设计 :: 先设计出微程序机器级和传统机器级 然后再为不同应用配置多种操作系统和编译系统软件
     + 有中间开始设计 :: 首先确定好软硬件的功能分配 然后从软硬件两个方面分头进行设计
       * 可以弥补其他两种设计方法带来的软硬件设计脱离的缺点
** 软件的可移植性
   - 定义 :: 指软件不用修改或只需要少量修改就可由一台计算机移植到另一台计算机上运行 即同一软件可应用于不同的环境
   - 实现软件移植的基本技术
     + 统一高级语言 :: 可以满足各个应用需要的通用高级语言，就可以方便实现不同的机器之间的软件移植
       * 评价 :: 完全实现统一难度较大 但可以实现相对统一
     + 采用系列机思想 :: 在同一种系统结构下 采用不同的组成和实现技术 研制出不同档次的机器
       * 向上向下兼容 :: 指按某档机器编制的软件 不加修改就能运行它高的/低的机器上 同一系列的软件一般应做到向上兼容 但向下兼容就不一定
       * 向前向后兼容 :: 在某个时期投入市场的机器上编制的软件 不加修改就可以运行于比它之前/后投入市场的机器上 一般保证向后兼容
       * 评价 :: 系列机是当前普遍采用的好办法 但只能实现相同系统结构机器之间的软件移植
     + 模拟与仿真
       * 模拟 :: 用一台机器的机器语言去解释另一台机器的机器语言程序 以实现软件移植
       * 仿真 :: 用一台机器的微程序直接去解释另一台机器的机器语言程序 以实现软件的移植 仿真比模拟速度快 因为中间减少一级解释过程
       * 模拟与仿真可以实现系统结构不同的机器之间的软件移植
       * 评价 :: 模拟方法灵活性好 但结构差异太大时 效率 速度会急剧下降 仿真在速度上损失较小 但不灵活 只能在差异不大的系统之间使用
** 应用与器件的发展对系统结构的影响
   - 计算机性能 :: 计算机硬件 软件 可靠性 可用性等多种指标的综合
   - 随着时间的变化 计算机性能在动态地增强 而且s随着应用领域的扩大 应用要求的提高 必然要求研制优化于这种应用的系统结构
   - 器件的发展使得计算机的频速度 主存容量 IO吞吐率以及集成度和可靠性等指标显著提高
** 并行性与计算机系统的分类
   - 并行性概念 :: 在解题过程中可同时进行运算或操作的特性 
     + 目的 :: 为了能够并行处理 提高计算机的运行效率
   - 并行性的双重含义
     + 同时性 :: 指两个以上的事件同时发生
     + 并发性 :: 指多个以上的时间在同一时间间隔内发生
   - 并行性的分级 从低到高
     + 指令内部 :: 一条指令内部各个微操作之间的并行
     + 指令之间 :: 多条指令之间的并行
     + 任务或进程之间 :: 多个任务或程序段之间的并行
     + 作业或程序之间 :: 多个作业或多道程序之间的执行
   - 并行性的开发途径
     + 时间重叠 :: 让多个处理过程在时间上相互错开 轮流重叠地使用同一套硬件设备的各个部分 加快硬件周转来赢得速度 他是在并行性中引入时间概念
     + 资源重复 :: 通过重复设置硬件资源来提高可靠性或性能 他是在并行性中引入空间因素
     + 资源共享 :: 利用软件的方法让多个用户按一定的时间顺序轮流使用同一套资源来提高其利用率
   - 并行处理系统的结构
     + 流水线计算机 :: 让多个部件在时间上交错重叠的x并行执行运算和处理 以实现时间上的并行 通过时间重叠途径实现并行性
     + 并行处理机 :: 让多个相同结构的处理单元按一定的连接方式 组成并行处理系统 通过资源重复实现
     + 多处理机 :: 让多台计算机在操作系统的控制下 达到时间和空间上的异步并行 通过资源共享
     + 数据流计算机 :: 数据流计算机指令的执行只受数据相关性的制约 一旦数据条件满足 所有指令同时“点火”
   - 多级系统的耦合度
     + 最低耦合系统 :: 计算机之间除通过某种存储介质外 各计算机之间无物理连接 也无共享的联机硬件资源
     + 松散耦合系统 :: 计算机之间通过通道或通讯线路实现互连 共享某些磁带 磁盘等外围设备 以较低频带在文件或数据集一级相互作用
     + 紧密耦合系统 :: 计算机之间经总线或高速开关互连 共享主存资源 有较高的信息传送速率 可实现数据级 任务级 作业级并行
   - 计算机系统的分类
     + Flynn分类法 :: 按指令流和数据流的多倍性对计算机系统分类
       * 指令流 :: 机器执行的指令序列
       * 数据流 :: 指令流调用的数据序列
       * 多倍行 :: 系统性能瓶颈部件下处于同意执行阶段的指令或数据的最大可能个数
       * 单指令流单数据流(SISD) :: 传统的单处理机
       * 单指令流多数据流(SIMD) :: 并行处理机
       * 多指令流单数据流(MISD) :: 脉动阵列计算机
       * 多指令流多数据流(MIMD) :: 多处理机系统
     + J.Kuck分类法 :: 用指令流和执行流及其多倍性来描述计算机系统总控制器的结构点
       * 单指令流单执行流(SISE) :: 典型的单处理机系统
       * 单指令流多执行流(SIME) :: 多操作部件的处理机
       * 多指令流单执行流(MISE) :: 多道程序的单处理机
       * 多指令流多执行流(MIME) :: 典型的多处理机系统
     + 冯泽云分类法 :: 用数据处理的最大并行度来定量描述各种计算机系统
       * 字串位串(WSBS)处理方式 :: 早期的位串行机
       * 字串位并(WSBP)处理方式 :: 传统的并行处理机
       * 字并位串(WPBS)处理方式 :: 并行处理机
       * 字并位并(WPBP)处理方式 :: 多处理机系统

